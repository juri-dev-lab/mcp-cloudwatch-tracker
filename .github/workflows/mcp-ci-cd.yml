name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  ECR_REPOSITORY: dev-labs/mcp-server
  IMAGE_TAG: cloudwatch-tracker

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          registry-url: "https://npm.pkg.github.com"
          scope: "@juri-dev-lab"

      - name: Install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.JURI_PACKAGES_TOKEN }}

      - name: Run tests
        run: npm test

      - name: Run linting
        run: npm run lint

      - name: Build package
        run: npm run build

      - name: Create .env file
        run: echo "${{ secrets.ENV_LIVE }}" > .env

  publish-npm:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          registry-url: "https://npm.pkg.github.com"
          scope: "@juri-dev-lab"

      # npm 설정 디버깅
      - name: Debug npm config
        run: |
          echo "Current npm configuration:"
          npm config list
          echo "Registry setting:"
          npm config get registry
          echo "Scope setting:"
          npm config get scope

      - name: Install dependencies
        run: npm ci --no-cache
        env:
          NODE_AUTH_TOKEN: ${{ secrets.JURI_PACKAGES_TOKEN }}

      - name: Get version
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build package
        run: npm run build

      # 패키지 정보 확인
      - name: Verify package info
        run: |
          echo "Package name and version:"
          node -p "require('./package.json').name"
          node -p "require('./package.json').version"

      - name: Publish to GitHub Packages
        run: npm publish --verbose
        env:
          NODE_AUTH_TOKEN: ${{ secrets.JURI_PACKAGES_TOKEN }}

  publish-docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 임시 런타임 디렉토리에 토큰 파일 생성
      - name: Create npmrc file
        run: |
          mkdir -p /tmp/secrets
          cat > /tmp/secrets/npmrc << EOF
          @juri-dev-lab:registry=https://npm.pkg.github.com/
          //npm.pkg.github.com/:_authToken=${{ secrets.JURI_PACKAGES_TOKEN }}
          EOF

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          no-cache: true
          tags: |
            devthorjuri/mcp-cloudwatch-tracker:latest
            devthorjuri/mcp-cloudwatch-tracker:${{ github.sha }}
          secret-files: |
            "npmrc=/tmp/secrets/npmrc"
